================================================
===== Naruhiro Chikuma =========================
===== 2016-05-23 ===============================
================================================

=== Controller for EASIROC firmware (ver. 2016-05-23).

=== To check Ruby environment before running software.
$ ./install.sh

=== To run this program.
$ ./Controller.rb
(IP address may follow if it is changed from 192.168.10.16)
If plot program "hist" is made, histograms are automatically produced.
Outputs are put under the directory "data".


=== EASIROC/FPGA parameters are controlled by YAML cards.
- RegisterValue.yml
Any parameters of EASIROC slow control could be overwrite those in
DefaultRegisterValue. 
- InputDAC.yml
- PedestalSuppression.yml
- Calibration.yml

= Do not change the following cards.
- DefaultRegisterValue.yml
- RegisterAttribute.yml
- RegisterValueAlias.yml



- 19/12/08 by me
Add a function for handling TestChargePtn and 
definition of an address to TestChargePtn in VME-EASIROC.rb 

VME-EASIROC.rb:
   # add 19/12/08
   def sendTestChargePtn
      $logger.debug "VmeEasiroc::sendTestChargePtn is called"
      # get constand address 
      address = testChargeAddress
      # get test charge level/pattern
      setting = @configLoader.toTestChargePtn
      $logger.debug "VmeEasiroc::sendTestChargePtn setting: #{setting}"
      # ten, tell them to EASIROC through rbcp
      @rbcp.write(address, setting)
   end

    # add 19/12/08
    def testChargeAddress
        0x00020000 # this must be consistent with the one written in RTL
    end

and, put a function to load TestChargePtn in ConfigLoader.rb

ConfigLoader.rb:
   # add 19/12/08
   def toTestChargePtn
      coeff = @calibration['TestChargePtn']
   end

and, put a parameter of TestChargePtn in yaml/Calibration.yml 

yaml/Calibration.yml:
TestChargePtn: 3 #1

